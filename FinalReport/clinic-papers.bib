

@misc{Burbank2010,
  title = {Network Time Protocol Version 4: Protocol and Algorithms Specification},
  shorttitle = {Network Time Protocol Version 4},
  url = {https://tools.ietf.org/html/rfc5905},
  timestamp = {2015-04-08 01:25:09},
  urldate = {2015-04-08},
  author = {Burbank, Jack and Mills, David and Kasch, William},
  month = jun,
  year = {2010},
  file = {Snapshot:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\2V8TP5X8\\rfc5905.html:text/html}
}

@inproceedings{Cardwell2000,
  title = {Modeling {TCP} latency},
  volume = {3},
  doi = {10.1109/INFCOM.2000.832574},
  abstract = {Several analytic models describe the steady-state throughput of bulk transfer TCP flows as a function of round trip time and packet loss rate. These models describe flows based on the assumption that they are long enough to sustain many packet losses. However, most TCP transfers across today's Internet are short enough to see few, if any, losses and consequently their performance is dominated by startup effects such as connection establishment and slow start. This paper extends the steady-state model proposed in Padhye et al. (1998), in order to capture these startup effects. The extended model characterizes the expected value and distribution of TCP connection establishment and data transfer latency as a function of transfer size, round trip time, and packet loss rate. Using simulations, controlled measurements of TCP transfers, and live Web measurements we show that, unlike earlier steady-state models for TCP performance, our extended model describes connection establishment and data transfer latency under a range of packet loss conditions, including no loss},
  timestamp = {2014-11-16 21:17:20},
  booktitle = {{IEEE} {INFOCOM} 2000. Nineteenth Annual Joint Conference of the {IEEE} Computer and Communications Societies. Proceedings},
  author = {Cardwell, N. and Savage, S. and Anderson, T.},
  month = mar,
  year = {2000},
  keywords = {connection establishment,data transfer latency,delay estimation,Internet,modeling,packet loss rate,performance,performance evaluation,round trip time,slow start,startup effects,steady-state throughput,TCP latency,telecommunication traffic,transfer size,transport protocols,Web measurements},
  pages = {1742--1751 vol.3},
  file = {IEEE Xplore Abstract Record:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\RGQ3T2HS\\Cardwell et al. - 2000 - Modeling TCP latency.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\8GTKZWSG\\Cardwell et al. - 2000 - Modeling TCP latency.pdf:application/pdf}
}

@article{Correll2005,
  title = {Design considerations for software only implementations of the {IEEE} 1588 precision time protocol},
  volume = {1588},
  url = {http://dora.cwru.edu/msb/pubs/1588.pdf},
  timestamp = {2014-10-23 22:37:14},
  urldate = {2014-10-23},
  journal = {Conference on {IEEE}},
  author = {Correll, Kendall and Barendt, Nick and Branicky, Michael},
  year = {2005},
  pages = {11--15},
  file = {[PDF] from cwru.edu:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\7VNT3ANS\\Correll et al. - 2005 - Design considerations for software only implementa.pdf:application/pdf}
}

@article{2008,
  title = {{IEEE} Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems},
  doi = {10.1109/IEEESTD.2008.4579760},
  abstract = {A protocol is provided in this standard that enables precise synchronization of clocks in measurement and control systems implemented with technologies such as network communication, local computing, and distributed objects. The protocol is applicable to systems communicating via packet networks. Heterogeneous systems are enabled that include clocks of various inherent precision, resolution, and stability to synchronize. System-wide synchronization accuracy and precision in the sub-microsecond range are supported with minimal network and local clock computing resources. Simple systems are installed and operated without requiring the management attention of users because the default behavior of the protocol allows for it.},
  timestamp = {2014-10-23 21:41:36},
  journal = {{IEEE} Std 1588-2008 (Revision of {IEEE} Std 1588-2002)},
  month = jul,
  year = {2008},
  keywords = {boundary clock,clock,distributed control,distributed objects,distributed system,heterogeneous systems,IEEE standard,IEEE standards,local clock computing resources,master clock,measurement and control system,network communication,networked control systems,networked measurement,packet networks,precision clock synchronization protocol,Protocols,real-time clock,synchronisation,synchronized clock,system-wide synchronization accuracy,transparent clock},
  pages = {c1--269},
  file = {4579760.pdf:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\EV8IZTIU\\4579760.pdf:application/pdf}
}

@inproceedings{Weil2007,
  address = {New York, {NY}, {USA}},
  series = {{PDSW} '07},
  title = {{RADOS}: A Scalable, Reliable Storage Service for Petabyte-scale Storage Clusters},
  isbn = {978-1-59593-899-2},
  shorttitle = {{RADOS}},
  url = {http://doi.acm.org/10.1145/1374596.1374606},
  doi = {10.1145/1374596.1374606},
  abstract = {Brick and object-based storage architectures have emerged as a means of improving the scalability of storage clusters. However, existing systems continue to treat storage nodes as passive devices, despite their ability to exhibit significant intelligence and autonomy. We present the design and implementation of RADOS, a reliable object storage service that can scales to many thousands of devices by leveraging the intelligence present in individual storage nodes. RADOS preserves consistent data access and strong safety semantics while allowing nodes to act semi-autonomously to self-manage replication, failure detection, and failure recovery through the use of a small cluster map. Our implementation offers excellent performance, reliability, and scalability while providing clients with the illusion of a single logical object store.},
  timestamp = {2014-10-17 01:56:27},
  urldate = {2014-09-21},
  booktitle = {Proceedings of the 2Nd International Workshop on Petascale Data Storage: Held in Conjunction with Supercomputing '07},
  publisher = {{ACM}},
  author = {Weil, Sage A. and Leung, Andrew W. and Brandt, Scott A. and Maltzahn, Carlos},
  year = {2007},
  keywords = {clustered storage,object-based storage,petabyte-scale storage},
  pages = {35--44},
  file = {ACM Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\9R26TR4E\\Weil et al. - 2007 - RADOS A Scalable, Reliable Storage Service for Pe.pdf:application/pdf}
}

@misc{SandeepKulkarni2014,
  title = {Logical Physical Clocks and Consistent Snapshots in Globally Distributed Databases},
  url = {http://www.cse.buffalo.edu/tech-reports/2014-04.pdf},
  abstract = {There is a gap between the theory and practice of dis-
tributed systems in terms of the use of time. The theory of
distributed systems shunned the notion of time, and intro-
duced ``causality tracking'' as a clean abstraction to rea-
son about concurrency. The practical systems employed
physical time (NTP) information but in a best effort man-
ner due to the difficulty of achieving tight clock synchro-
nization. In an effort to bridge this gap and reconcile the
theory and practice of distributed systems on the topic of
time, we propose a hybrid logical clock, HLC, that com-
bines the best of logical clocks and physical clocks. HLC
captures the causality relationship like logical clocks, and
enables easy identification of consistent snapshots in dis-
tributed systems. Dually, HLC can be used in lieu of phys-
ical/NTP clocks since it maintains its logical clock to be
always close to the NTP clock. Moreover HLC fits in
to 64 bits NTP timestamp format, and is masking toler-
ant to NTP kinks and uncertainties. We show that HLC
has many benefits for wait-free transaction ordering and
performing snapshot reads in multiversion globally dis-
tributed databases.},
  timestamp = {2014-10-17 01:56:27},
  urldate = {2014-09-21},
  publisher = {The State University of New York, University at Buffalo},
  author = {{Sandeep Kulkarni} and {Murat Demirbas} and {Deepak Madeppa} and {Bharadwaj Avva} and {Marcelo Leone}},
  month = apr,
  year = {2014},
  file = {2014-04.pdf:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\GI9B5EKS\\2014-04.pdf:application/pdf}
}

@inproceedings{Ongaro2014,
  address = {Berkeley, {CA}, {USA}},
  series = {{USENIX} {ATC}'14},
  title = {In Search of an Understandable Consensus Algorithm},
  isbn = {978-1-931971-10-2},
  url = {http://dl.acm.org/citation.cfm?id=2643634.2643666},
  abstract = {Raft is a consensus algorithm for managing a replicated log. It produces a result equivalent to (multi-)Paxos, and it is as efficient as Paxos, but its structure is different from Paxos; this makes Raft more understandable than Paxos and also provides a better foundation for building practical systems. In order to enhance understandability, Raft separates the key elements of consensus, such as leader election, log replication, and safety, and it enforces a stronger degree of coherency to reduce the number of states that must be considered. Results from a user study demonstrate that Raft is easier for students to learn than Paxos. Raft also includes a new mechanism for changing the cluster membership, which uses overlapping majorities to guarantee safety.},
  timestamp = {2014-10-17 01:56:27},
  urldate = {2014-09-21},
  booktitle = {Proceedings of the 2014 {USENIX} Conference on {USENIX} Annual Technical Conference},
  publisher = {{USENIX} Association},
  author = {Ongaro, Diego and Ousterhout, John},
  month = jun,
  year = {2014},
  pages = {305--320},
  file = {raft.pdf:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\R6HHBP88\\raft.pdf:application/pdf}
}

@inproceedings{Maroti2004,
  address = {New York, {NY}, {USA}},
  series = {{SenSys} '04},
  title = {The Flooding Time Synchronization Protocol},
  isbn = {1-58113-879-2},
  url = {http://doi.acm.org/10.1145/1031495.1031501},
  doi = {10.1145/1031495.1031501},
  abstract = {Wireless sensor network applications, similarly to other distributed systems, often require a scalable time synchronization service enabling data consistency and coordination. This paper describes the Flooding Time Synchronization Protocol (FTSP), especially tailored for applications requiring stringent precision on resource limited wireless platforms. The proposed time synchronization protocol uses low communication bandwidth and it is robust against node and link failures. The FTSP achieves its robustness by utilizing periodic flooding of synchronization messages, and implicit dynamic topology update. The unique high precision performance is reached by utilizing MAC-layer time-stamping and comprehensive error compensation including clock skew estimation. The sources of delays and uncertainties in message transmission are analyzed in detail and techniques are presented to mitigate their effects. The FTSP was implemented on the Berkeley Mica2 platform and evaluated in a 60-node, multi-hop setup. The average per-hop synchronization error was in the one microsecond range, which is markedly better than that of the existing RBS and TPSN algorithms.},
  timestamp = {2014-10-17 01:56:27},
  urldate = {2014-09-21},
  booktitle = {Proceedings of the 2Nd International Conference on Embedded Networked Sensor Systems},
  publisher = {{ACM}},
  author = {Mar{\'o}ti, Mikl{\'o}s and Kusy, Branislav and Simon, Gyula and L{\'e}deczi, {\'A}kos},
  year = {2004},
  keywords = {clock drift,clock synchronization,multi-hop,sensor networks,time synchronization},
  pages = {39--49},
  file = {ACM Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\42NWBVCI\\Maróti et al. - 2004 - The Flooding Time Synchronization Protocol.pdf:application/pdf}
}

@inproceedings{Lenzen2009,
  address = {New York, {NY}, {USA}},
  series = {{SenSys} '09},
  title = {Optimal Clock Synchronization in Networks},
  isbn = {978-1-60558-519-2},
  url = {http://doi.acm.org/10.1145/1644038.1644061},
  doi = {10.1145/1644038.1644061},
  abstract = {Having access to an accurate time is a vital building block in all networks; in wireless sensor networks even more so, because wireless media access or data fusion may depend on it. Starting out with a novel analysis, we show that orthodox clock synchronization algorithms make fundamental mistakes. The state-of-the-art clock synchronization algorithm FTSP exhibits an error that grows exponentially with the size of the network, for instance. Since the involved parameters are small, the error only becomes visible in midsize networks of about 10--20 nodes. In contrast, we present PulseSync, a new clock synchronization algorithm that is asymptotically optimal. We evaluate PulseSync on a Mica2 testbed, and by simulation on larger networks. On a 20 node network, the prototype implementation of PulseSync outperforms FTSP by a factor of 5. Theory and simulation show that for larger networks, PulseSync offers an accuracy which is several orders of magnitude better than FTSP. To round off the presentation, we investigate several optimization issues, e.g. media access and local skew.},
  timestamp = {2014-10-17 01:56:27},
  urldate = {2014-09-21},
  booktitle = {Proceedings of the 7th {ACM} Conference on Embedded Networked Sensor Systems},
  publisher = {{ACM}},
  author = {Lenzen, Christoph and Sommer, Philipp and Wattenhofer, Roger},
  year = {2009},
  keywords = {clock drift,lower bound,sensor networks,time synchronization},
  pages = {225--238},
  file = {ACM Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\RJD3BZGF\\Lenzen et al. - 2009 - Optimal Clock Synchronization in Networks.pdf:application/pdf}
}

@article{Lenzen2010,
  title = {Tight Bounds for Clock Synchronization},
  volume = {57},
  issn = {0004-5411},
  url = {http://doi.acm.org/10.1145/1667053.1667057},
  doi = {10.1145/1667053.1667057},
  abstract = {We present a novel clock synchronization algorithm and prove tight upper and lower bounds on the worst-case clock skew that may occur between any two participants in any given distributed system. More importantly, the worst-case clock skew between neighboring nodes is (asymptotically) at most a factor of two larger than the best possible bound. While previous results solely focused on the dependency of the skew bounds on the network diameter, we prove that our techniques are optimal also with respect to the maximum clock drift, the uncertainty in message delays, and the imposed bounds on the clock rates. The presented results all hold in a general model where both the clock drifts and the message delays may vary arbitrarily within pre-specified bounds. Furthermore, our algorithm exhibits a number of other highly desirable properties. First, the algorithm ensures that the clock values remain in an affine linear envelope of real time. A better worst-case bound on the accuracy with respect to real time cannot be achieved in the absence of an external timer. Second, the algorithm minimizes the number and size of messages that need to be exchanged in a given time period. Moreover, only a small number of bits must be stored locally for each neighbor. Finally, our algorithm can easily be adapted for a variety of other prominent synchronization models.},
  timestamp = {2014-10-17 01:56:27},
  number = {2},
  urldate = {2014-09-21},
  journal = {J. {ACM}},
  author = {Lenzen, Christoph and Locher, Thomas and Wattenhofer, Roger},
  month = feb,
  year = {2010},
  keywords = {Bounded rates,global skew,gradient property,local skew,variable clock drifts,worst-case analysis},
  pages = {8:1--8:42},
  file = {ACM Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\U53ZWZMT\\Lenzen et al. - 2010 - Tight Bounds for Clock Synchronization.pdf:application/pdf}
}

@article{Lenzen2014,
  title = {{PulseSync}: An Efficient and Scalable Clock Synchronization Protocol},
  volume = {Early Access Online},
  issn = {1063-6692},
  shorttitle = {{PulseSync}},
  doi = {10.1109/TNET.2014.2309805},
  abstract = {Clock synchronization is an enabling service for a wide range of applications and protocols in both wired and wireless networks. We study the implications of clock drift and communication latency on the accuracy of clock synchronization when scaling the network diameter. Starting with a theoretical analysis of synchronization protocols, we prove tight bounds on the synchronization error in a model that assumes independently and randomly distributed communication delays and slowly changing drifts. While this model is more optimistic than traditional worst-case analysis, it much better captures the nature of real-world systems such as wireless networks. The bound on the synchronization accuracy, which is roughly the square root of the network diameter, is achieved by the novel PulseSync protocol. Extensive experiments demonstrate that PulseSync is able to meet the predictions from theory and tightly synchronizes large networks. This contrasts against an exponential growth of the skew incurred by the state-of-the-art protocol for wireless sensor networks. Moreover, PulseSync adapts much faster to network dynamics and changing clock drifts than this protocol.},
  timestamp = {2014-10-17 01:56:27},
  journal = {{IEEE}/{ACM} Transactions on Networking},
  author = {Lenzen, C. and Sommer, P. and Wattenhofer, R.},
  year = {2014},
  keywords = {Accuracy,Clocks,Delays,Probabilistic analysis,Protocols,Receivers,Synchronization,Wireless networks},
  file = {IEEE Xplore Abstract Record:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\ZE66PK3P\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\3TPPM7AN\\Lenzen et al. - 2014 - PulseSync An Efficient and Scalable Clock Synchro.pdf:application/pdf}
}

@article{Lamport1978,
  title = {Time, Clocks, and the Ordering of Events in a Distributed System},
  volume = {21},
  issn = {0001-0782},
  url = {http://doi.acm.org/10.1145/359545.359563},
  doi = {10.1145/359545.359563},
  abstract = {The concept of one event happening before another in a distributed system is examined, and is shown to define a partial ordering of the events. A distributed algorithm is given for synchronizing a system of logical clocks which can be used to totally order the events. The use of the total ordering is illustrated with a method for solving synchronization problems. The algorithm is then specialized for synchronizing physical clocks, and a bound is derived on how far out of synchrony the clocks can become.},
  timestamp = {2014-10-17 01:56:27},
  number = {7},
  urldate = {2014-09-21},
  journal = {Commun. {ACM}},
  author = {Lamport, Leslie},
  month = jul,
  year = {1978},
  keywords = {clock synchronization,computer networks,distributed systems,multiprocess systems},
  pages = {558--565},
  file = {ACM Full Text PDF:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\DKZ4HKEZ\\Lamport - 1978 - Time, Clocks, and the Ordering of Events in a Dist.pdf:application/pdf}
}

@inproceedings{Fidge1988,
  title = {Timestamps in message-passing systems that preserve the partial ordering},
  volume = {10},
  timestamp = {2014-10-17 01:56:27},
  booktitle = {Proceedings of the 11th Australian Computer Science Conference},
  author = {Fidge, Colin J},
  year = {1988},
  pages = {56--66},
  file = {fidge88timestamps.pdf:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\JP4K6ISW\\fidge88timestamps.pdf:application/pdf}
}

@inproceedings{Corbett2012,
  address = {Berkeley, {CA}, {USA}},
  series = {{OSDI}'12},
  title = {Spanner: Google's Globally-distributed Database},
  isbn = {978-1-931971-96-6},
  shorttitle = {Spanner},
  url = {http://dl.acm.org/citation.cfm?id=2387880.2387905},
  abstract = {Spanner is Google's scalable, multi-version, globally-distributed, and synchronously-replicated database. It is the first system to distribute data at global scale and support externally-consistent distributed transactions. This paper describes how Spanner is structured, its feature set, the rationale underlying various design decisions, and a novel time API that exposes clock uncertainty. This API and its implementation are critical to supporting external consistency and a variety of powerful features: nonblocking reads in the past, lock-free read-only transactions, and atomic schema changes, across all of Spanner.},
  timestamp = {2014-10-17 01:56:27},
  urldate = {2014-09-21},
  booktitle = {Proceedings of the 10th {USENIX} Conference on Operating Systems Design and Implementation},
  publisher = {{USENIX} Association},
  author = {Corbett, James C. and Dean, Jeffrey and Epstein, Michael and Fikes, Andrew and Frost, Christopher and Furman, J. J. and Ghemawat, Sanjay and Gubarev, Andrey and Heiser, Christopher and Hochschild, Peter and Hsieh, Wilson and Kanthak, Sebastian and Kogan, Eugene and Li, Hongyi and Lloyd, Alexander and Melnik, Sergey and Mwaura, David and Nagle, David and Quinlan, Sean and Rao, Rajesh and Rolig, Lindsay and Saito, Yasushi and Szymaniak, Michal and Taylor, Christopher and Wang, Ruth and Woodford, Dale},
  year = {2012},
  pages = {251--264},
  file = {osdi12-final-16.pdf:C\:\\Users\\njc09_000\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\anm1c81h.default\\zotero\\storage\\SUHVCMPU\\osdi12-final-16.pdf:application/pdf}
}


